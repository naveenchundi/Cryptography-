#include <stdio.h>
#include <string.h>
#include <ctype.h>

// Function to perform polyalphabetic substitution cipher
void polyalphabeticCipher(char *plaintext, char *key) {
    int keyLength = strlen(key);
    int plaintextLength = strlen(plaintext);
    char ciphertext[plaintextLength];
    
    for (int i = 0; i < plaintextLength; i++) {
        if (isalpha(plaintext[i])) {
            char base = isupper(plaintext[i]) ? 'A' : 'a';
            int shift = key[i % keyLength] - 'A'; // Assuming key contains only uppercase letters
            
            ciphertext[i] = (plaintext[i] - base + shift) % 26 + base;
        } else {
            ciphertext[i] = plaintext[i]; // Preserve non-alphabetic characters
        }
    }
    
    ciphertext[plaintextLength] = '\0';
    
    printf("Plaintext: %s\nKey: %s\nCiphertext: %s\n", plaintext, key, ciphertext);
}

// Example usage
int main() {
    char plaintext[] = "Hello, World!";
    char key[] = "KEY";
    
    polyalphabeticCipher(plaintext, key);
    
    return 0;
}
